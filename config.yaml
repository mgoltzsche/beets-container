directory: /data/music
library: /data/beets/library.db

paths:
  default: Albums/%title{$albumartist}/$album%aunique{}/$track $title
  singleton: Singles/%title{$first_artist}/$title
  comp: Compilations/$album%aunique{}/$track $title

# Load plugins beets can use.
plugins:
- describe
- web
- webm3u
- webrouter
- beetstream
- types
- smartplaylist
- importfeeds
- edit
- play
- mbsync
- spotify
#- discogs
- fromfilename
- lastgenre
- autogenre
- ftintitle
- inline
- rewrite
- ihate
- chroma
- xtractor
#- replaygain
- mpdstats
- convert
- bpm
- duplicates
- bareasc
- fuzzy
- info
- ytimport
- badfiles
- unimported
- random

# Run a web server that serves a GUI, Subsonic API and M3U playlists.
# See https://github.com/mgoltzsche/beets-webrouter
webrouter:
  host: 127.0.0.1
  port: 8337
  favicon: /favicon.ico
  routes:
    # TODO: add favicon.ico route
    /:
      plugin: web
    /subsonic:
      plugin: beetstream
      config:
        never_transcode: true
    /m3u:
      plugin: webm3u

# Run a subsonic server.
# See https://github.com/BinaryBrain/Beetstream
beetstream:
  host: 0.0.0.0
  port: 8080
  never_transcode: true

# Run a web server that provides a simple GUI and API.
# See https://beets.readthedocs.io/en/stable/plugins/web.html
web:
  host: 0.0.0.0
  port: 8337
  reverse_proxy: true
  readonly: true

# Run a web server to serve the playlists.
# See https://github.com/mgoltzsche/beets-webm3u
webm3u:
  host: 0.0.0.0
  port: 8339

# Import new audio files into the music library.
# Usage: beet import /import --singletons
import:
  write: true
  copy: true
  move: false
  link: false
  hardlink: false
  incremental: true
  quiet: false
  quiet_fallback: skip
  log: /data/beets/import.log
  # To import a large amount of data, enable this flag, run `beets import -q`, disable the flag and run `beets import`.
  # This is to be prompted for skipped tracks only.
  #incremental_skip_later: true

# Import liked songs from Youtube.
# See https://github.com/mgoltzsche/beets-ytimport
# Usage: beet ytimport --likes --max-likes 3
ytimport:
  directory: /data/ytimport

spotify:
    source_weight: 0.7
    mode: list
    tiebreak: popularity
    show_failures: on

# Match tracks against the Discogs database during import.
#discogs:
#  source_weight: 0.5

# Extract low and high level information from songs, analyzing the audio.
# See https://github.com/adamjakab/BeetsPluginXtractor
# Example: beet xtractor
xtractor:
  auto: no
  dry-run: no
  write: yes
  threads: 4
  force: no
  quiet: no
  keep_output: no
  keep_profiles: no
  output_path: /tmp/xtractor
  essentia_extractor: /usr/local/bin/essentia_streaming_extractor_music
  high_level_targets:
    genre_rosamerica_probability: # 0..1
      path: "highlevel.genre_rosamerica.probability"
      type: float
    genre_electronic:
      path: "highlevel.genre_electronic.value"
      type: string
    genre_electronic_probability: # 0..1
      path: "highlevel.genre_electronic.probability"
      type: float
    timbre: # "dark" or "bright"
      path: "highlevel.timbre.value"
      type: string
    tonal_atonal: # "tonal" or "atonal"
      path: "highlevel.tonal_atonal.value"
      type: string
    key_edma: # e.g. "C#"
      path: "tonal.key_edma.key"
      type: string
    key_edma_scale: # e.g. "minor"
      path: "tonal.key_edma.scale"
      type: string
  extractor_profile:
      highlevel:
        svm_models:
        - /var/lib/essentia/svm-models/beta5/danceability.history
        - /var/lib/essentia/svm-models/beta5/gender.history
        - /var/lib/essentia/svm-models/beta5/genre_rosamerica.history
        - /var/lib/essentia/svm-models/beta5/genre_electronic.history
        - /var/lib/essentia/svm-models/beta5/mood_acoustic.history
        - /var/lib/essentia/svm-models/beta5/mood_aggressive.history
        - /var/lib/essentia/svm-models/beta5/mood_electronic.history
        - /var/lib/essentia/svm-models/beta5/mood_happy.history
        - /var/lib/essentia/svm-models/beta5/mood_sad.history
        - /var/lib/essentia/svm-models/beta5/mood_party.history
        - /var/lib/essentia/svm-models/beta5/mood_relaxed.history
        - /var/lib/essentia/svm-models/beta5/moods_mirex.history
        - /var/lib/essentia/svm-models/beta5/voice_instrumental.history
        - /var/lib/essentia/svm-models/beta5/tonal_atonal.history
        - /var/lib/essentia/svm-models/beta5/timbre.history

# Match tracks against the Discogs database during import.
#discogs:
#  source_weight: 0.5

# Move featured artists from the artist field to the title field.
# Apparently this works with albums only.
# See https://beets.readthedocs.io/en/stable/plugins/ftintitle.html
ftintitle:
  auto: true
  drop: false
  format: 'feat. {0}'

# Extract the first artist into separate field when multiple artists specified.
# Works like the ftintitle plugin above but with non-album items.
# See https://github.com/beetbox/beets/issues/3176#issuecomment-851875879
item_fields:
  first_artist: |
    import re
    m = re.match('^(.+?)\\s+(x\\s|\\(?(feat(\\.?|uring)|(ft|vs)\\.))', artist, flags=re.IGNORECASE)
    if m:
      return m[1]
    return artist

# Write playlist file during each import.
# This allows to propagate the latest imports to other tools.
# See https://beets.readthedocs.io/en/stable/plugins/importfeeds.html
importfeeds:
  formats: m3u
  dir: /data/importfeed
  m3u_name: imported.m3u

# Search tracks using their ASCII representation.
# See https://beets.readthedocs.io/en/stable/plugins/bareasc.html
# Example: beet ls '#dvorak'
bareasc:
  prefix: '#'

# Search tracks using fuzzy pattern.
# See https://beets.readthedocs.io/en/stable/plugins/fuzzy.html
# Example: beet ls '~Vareoldur'
fuzzy:
  threshold: 0.7
  prefix: '~'

# Changes the type of meta data fields.
# See https://beets.readthedocs.io/en/stable/plugins/types.html
#types:
  # Change rating from string to int in order to be able to apply range queries.
  # Usage example:
  #   beet modify "My favorite track" rating=5
  #   beet ls rating:4..5
  #rating: int

# Generate an acoustic fingerprint for every track and use it to lookup meta data within the Acousticid service.
# See https://beets.readthedocs.io/en/stable/plugins/chroma.html
chroma:
  auto: true

# Ensures each track has a genre assigned.
# Uses the lastgenre and xtractor plugins.
# See https://github.com/mgoltzsche/beets-autogenre
# Usage: beet autogenre [options] [item_selector]
autogenre:
  pretend: false
  all: false
  force: false
  lastgenre: true
  xtractor: true
  remix_title: true
  parent_genres: true

# Fetches genres tags from last.fm and assigns them to tracks.
# See https://beets.readthedocs.io/en/stable/plugins/lastgenre.html
lastgenre:
  auto: false
  canonical: /etc/beets/genre-tree.yaml
  prefer_specific: true
  count: 4 # To also tag Rage Again the Machine as Hip Hop
  source: track
  # min_weight of last.fm tags
  # 15% to prevent Amadou & Mariam from being tagged as New Wave
  # 20% to prevent Total Science from being tagged as Liquid DnB
  # 35% to prevent Ajukaja from being tagged as Minimal as opposed to House
  min_weight: 35
  # This files picks some of the genres defined in the canonical tree.
  # The genres listed in this files must be aligned with the playlist queries.
  whitelist: /data/beets/genres.txt

# Skip files during import using pre-configured criteria.
# See https://beets.readthedocs.io/en/stable/plugins/ihate.html
ihate:
  warn:
  - artist:rnb
  skip:
  - genre:Comedy
  - artist::^Adele$
  - artist::^AYLIVA$
  - artist::^Sia$

# Convert audio files.
# See https://beets.readthedocs.io/en/stable/plugins/convert.html
convert:
  never_convert_lossy_files: true # prevent quality from decreasing further
  embed: false # don't embed album art
  hardlink: false
  #command: ffmpeg -i $source -y -vn -c:a copy -aq 2 $dest
  #extension: m4a

# List duplicate tracks within the library.
# See https://beets.readthedocs.io/en/stable/plugins/duplicates.html
# Example: beet duplicates -f 2000 | spark
duplicates:
  delete: false

# Normalize the audio playback level.
# See https://beets.readthedocs.io/en/stable/plugins/replaygain.html
# TODO: enable when alpine supports mp3gain, see https://pkgs.alpinelinux.org/packages?name=mp3gain
#replaygain:
#  auto: true
#  backend: gstreamer

# Add BPM metadata to tracks by tapping.
# See https://beets.readthedocs.io/en/stable/plugins/bpm.html
bpm:
  max_strokes: 3
  overwrite: true

# Allows to play tracks also during import.
# See https://beets.readthedocs.io/en/stable/plugins/play.html
# Example: beet play House --args=--shuffle
play:
  # Using mpv instead of ffplay since the latter does not support seeking when display disabled.
  #command: ffplay -autoexit -nodisp
  command: play-playlist

# Generate playlists from music library queries.
# See https://beets.readthedocs.io/en/stable/plugins/smartplaylist.html
# Please make sure to query only genres configured within lastgenre whitelist.
# Example: beet splupdate
smartplaylist:
  auto: false
  output: m3u8
  attributes: [id]
  playlist_dir: /data/playlists
  relative_to: /data/playlists
  #uri_format: 'http://localhost:8337/item/$id/file'
  #uri_format: 'beets:library:track;$id'
  playlists:
  - name: all.m3u8
    query: ''
  - name: all-by-album-genre.m3u8
    query: 'albumartist+ year+ album+ disc+ track+ genre+ artist+ title+'
  - name: jazz-blues.m3u8
    query:
    - genre_primary:Jazz
    - genre_primary::'^Blues'
  - name: reggae.m3u8
    query:
    - genre:reggae
    - genre::'^Dub(?!step)'
  - name: dub.m3u8
    query:
    - genre::'^Dub(?!step)'
  - name: ambient.m3u8
    query:
    - genre_primary:Ambient
  - name: chillout.m3u8
    query:
    - genre_primary:Ambient
    - genre_primary:Downtempo
    - genre_primary:Electronica
    - genre_primary:Electro
    - genre:'Trip Hop'
    - genre:'Easy Listening'
  - name: downtempo.m3u8
    query:
    - genre_primary:Downtempo
  - name: world-music.m3u8
    query:
    - genre_primary:Blues
    - genre:African
    - genre:Afrobeat
    - genre:'Rhythm And Blues'
    - genre::'(^|, )Funk(,|$)'
    - genre::'(^|, )Soul(,|$)'
    - genre:'Caribbean And Latin American'
    - genre_primary:Brazilian
    - genre:'Balkan Beats'
  - name: balkan-beats.m3u8
    query:
    - genre:'Balkan Beats'
  - name: afrobeat.m3u8
    query:
    - genre:Afrobeat
  - name: classical.m3u8
    query:
    - genre::'^Classical'
  - name: dnb.m3u8
    query:
    - genre:'Drum And Bass'
    - genre:Breakbeat
    - genre:Jungle
    - genre:'Ragga Drum And Bass'
  - name: neurofunk.m3u8
    query:
    - genre:Neurofunk
  - name: jungle.m3u8
    query:
    - genre_primary:Jungle
  - name: uk-garage.m3u8
    query:
    - genre::'^Uk Garage'
    - genre:Dubstep
    - genre:Grime
  - name: dubstep-grime.m3u8
    query:
    - genre_primary:'Dark Dubstep'
    - genre_primary:Dubstep bpm:0..90
    - genre_primary:Grime
  - name: electronic.m3u8
    query:
    - genre:Electronic
    - genre:House
    - genre:Techno
    - genre:Minimal
    - genre:Trance
    - genre:Goa Trance
    - genre:Electro
    - genre:Progressive
  - name: house-techno.m3u8
    query:
    - genre_primary:House
    - genre_primary:Techno
    - genre_primary:Minimal
    - genre_primary:Progressive
  - name: house.m3u8
    query:
    - genre_primary:House
  - name: tech-house-minimal.m3u8
    query:
    - genre_primary:'Tech House'
    - genre_primary:Minimal
  - name: techno.m3u8
    query:
    - genre_primary:Techno
    - genre_primary:Minimal
  - name: minimal.m3u8
    query:
    - genre_primary:Minimal
  - name: trance.m3u8
    query:
    - genre_primary:Trance
  - name: ska.m3u8
    query:
    - genre_primary:Ska
  - name: east-european.m3u8
    query:
    - genre:Balkan
    - genre:Klezmer
    - genre:Yiddish
    - genre:'East European'
  - name: rock.m3u8
    query:
    - genre::'^Rock'
    - genre::'^Punk Rock'
    - genre::'^New Wave'
    - genre::'^Folk'
  - name: punk.m3u8
    query:
    - genre:Punk
  - name: pop.m3u8
    query:
    - genre:Pop
    - genre:'New Wave'
    - genre:'Electronic Rock'
    - genre:'Balkan Beats'
  - name: hiphop.m3u8
    query:
    - genre::'^Hip Hop'
  - name:  'liked/1 or more.m3u'
    query: 'play_count:1..'
  - name:  'liked/5 or more.m3u'
    query: 'play_count:5..'
  - name:  'liked/loved.m3u'
    query: 'loved:1'
  - name:  'latest/last day.m3u'
    query: 'added- added:-1d..'
  - name:  'latest/last 3 days.m3u'
    query: 'added- added:-3d..'
  - name: 'latest/last 7 days.m3u'
    query: 'added- added:-7d..'
  - name: 'latest/last 14 days.m3u'
    query: 'added- added:-14d..'
  - name: 'latest/last 30 days.m3u'
    query: 'added- added:-30d..'
  - name: 'latest/last 60 days.m3u'
    query: 'added- added:-60d..'
